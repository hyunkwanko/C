1번 - (a)
#include <stdio.h>
#define DEBUG

double power(int x, int y)
{
	double result = 1.0;
	int i;
	
	for (i = 0; i < y; i++)
	{
	#ifdef DEBUG
		printf("result = %f\n", result);
	#endif
		result *= x;
	}

	return result;
}

int main(void)
{
	int x, y;
	
	printf("수를 입력하시오: ");
	scanf("%d %d", &x, &y);
	
	printf("결과 : %f\n", power(x, y));

	return 0;
}

1번 - (b)
#include <stdio.h>
#define DEBUG 2

double power(int x, int y)
{
	double result = 1.0;
	int i;
	
	for (i = 0; i < y; i++)
	{
	#if DEBUG == 2
		printf("result = %f\n", result);
	#endif
		result *= x;
	}

	return result;
}

int main(void)
{
	int x, y;
	
	printf("수를 입력하시오: ");
	scanf("%d %d", &x, &y);
	
	printf("결과 : %f\n", power(x, y));

	return 0;
}

1번 - (c)
#include <stdio.h>
#define DEBUG 2
#define LEVEL 3

double power(int x, int y)
{
	double result = 1.0;
	int i;
	
	for (i = 0; i < y; i++)
	{
	#if (DEBUG == 2 && LEVEL == 3)
		printf("result = %f\n", result);
	#endif
		result *= x;
	}

	return result;
}

int main(void)
{
	int x, y;
	
	printf("수를 입력하시오: ");
	scanf("%d %d", &x, &y);
	
	printf("결과 : %f\n", power(x, y));

	return 0;
}

1번 - (d)
#include <stdio.h>
#define DEBUG 2
#define LEVEL 3

double power(int x, int y)
{
	double result = 1.0;
	int i;
	
	for (i = 0; i < y; i++)
	{
	#if (DEBUG == 2 && LEVEL == 3)
		printf("result = %f, LINE = %d\n", result, __LINE__);
	#endif
		result *= x;
	}

	return result;
}

int main(void)
{
	int x, y;
	
	printf("수를 입력하시오: ");
	scanf("%d %d", &x, &y);
	
	printf("결과 : %f\n", power(x, y));

	return 0;
}

1번 - (e)
#include <stdio.h>
#define POWER_TYPE 1

#if POWER_TYPE == 0
double power(int x, int y)
{
	double result = 1;
	int i;

	for (i = 0; i < y; i++)
	{
		printf("result = %d, LINE = %d\n", (int)result, __LINE__);
		result *= x;
	}

	return result;
}
#elif POWER_TYPE == 1
double power(int x, int y)
{
	double result = 1.0;
	int i;

	for (i = 0; i < y; i++)
	{
		printf("result = %f, LINE = %d\n", result, __LINE__);
		result *= x;
	}

	return result;
}
#endif



int main(void)
{
	int x, y;
	
	printf("수를 입력하시오: ");
	scanf("%d %d", &x, &y);
	
	printf("결과 : %f\n", power(x, y));

	return 0;
}

1번 - (f)
#include <stdio.h>
#define DEBUG 2

double power(int x, int y)
{
	double result = 1.0;
	int i;

	for (i = 0; i < y; i++)
	{
#if 0
		printf("result = %f\n", result);
#endif
		result *= x;
	}

	return result;
}

int main(void)
{
	int x, y;

	printf("수를 입력하시오: ");
	scanf("%d %d", &x, &y);

	printf("결과 : %f\n", power(x, y));

	return 0;
}

2번
#include <stdio.h>
#define GET_MIN(x,y,z) (x < y ? (x < z ? x : z) : (y < z ? y : z))

int main(void)
{
	int x, y, z;

	printf("세 개의 정수를 입력하시오: ");
	scanf("%d %d %d", &x, &y, &z);

	printf("최소값은 %d입니다.\n", GET_MIN(x, y, z));

	return 0;
}

3번

#include <stdio.h>

#define ARRAY_INIT(array,size,value) {int i; for(i = 0; i < size; i++) array[i] = value;}

int main(void)
{
	int arr[10];
	int value;
	int i;

	printf("배열의 값을 지정하세요: ");
	scanf("%d", &value);

	ARRAY_INIT(arr, 10, value);

	for (i = 0; i<10; i++)
		printf("%d ", arr[i]);
	printf("\n");

	return 0;
}

4번
#include <stdio.h>
#define pi 3.141592
#define vf(r,h) (r * r * h * pi)

int main(void)
{
	double r, h;

	printf("반지름을 입력하시오: ");
	scanf("%lf", &r);

	printf("높이를 입력하시오: ");
	scanf("%lf", &h);
	
	printf("원기둥의 부피: %f\n", vf(r, h));

	return 0;
}

5번
#include <stdio.h>
#define IS_SPACE(c) (c == '\t' || c == ' ' || c == '\n')

int main(void)
{
	char str[100];
	int i;
	int count = 0;

	printf("문자열을 입력하시오: ");
	gets(str);

	for (i = 0; str[i] != NULL; i++)
	{
		if (IS_SPACE(str[i]))
			count++;
	}
	printf("공백 문자의 개수는 %d개입니다.\n", count);
	
	return 0;		
}

6번 , 7번
#include <stdio.h>
#define GET_BIT(n,pos) ( (n >> pos) & 1 )
#define SET_BIT(n,pos) ( n |= (1 << pos) )
#define CLR_BIT(n,pos) ( n &= (~1 << pos) )

void display_bit(int value)
{
	int i;
	for (i = 31; i >= 0; i--)
		if (GET_BIT(value, i))
			printf("1");
		else
			printf("0");
	printf("\n");
}

int main(void)
{
	int n;
	printf("정수값을 입력하시오: ");
	scanf("%d", &n);

	printf("%d\n", CLR_BIT(n, 2));

	display_bit(n);
	return 0;
}

8번
#include <stdio.h>
#define GET_BIT(n,pos) ( (n >> pos) & 1 )
#define SET_BIT(n,pos) ( n |= (1 << pos) )
#define CLR_BIT(n,pos) ( n &= (~1 << pos) )
void display_bit(int value)
{
	int i;
	for (i = 31; i >= 0; i--)
		if (GET_BIT(value, i))
			printf("1");
		else
			printf("0");
	printf("\n");
}

int main(void) 
{
	int num, direction, distance;

	printf("정수값을 입력하시오: ");
	scanf("%d", &num);
	printf("왼쪽이동은 0, 오른쪽이동은 1을 입력하시오: ");
	scanf("%d", &direction);
	printf("이동시킬 거리: ");
	scanf("%d", &distance);

	printf("이동 전 : ");
	display_bit(num);

	if (direction == 0)
		num <<= distance;
	else if (direction == 1)
		num >>= distance;

	printf("이동 후 : ");
	display_bit(num);
	return 0;
}

9번
#include <stdio.h>
#include <string.h>

int main(void)
{
	char s[100];
	int i;
	printf("문자열을 입력하시오: ");
	gets_s(s);

	for (i = 0; s[i] != NULL ; i++)
	{
		s[i] ^= 0x20;
	}
	printf("결과 문자열: %s\n", s);
	return 0;
}


10번
#include <stdio.h>

void display(char *arr);

int main(void) 
{
	char arr[100], key;
	int i;

	key = 0x24;

	printf("암호를 입력하세요 : ");
	gets_s(arr);

	display(arr);
	for (i = 0; arr[i] != NULL; i++)
		arr[i] ^= key;
	printf(" 은 ");
	display(arr);
	printf(" 로 암호화\n");

	display(arr);
	for (i = 0; arr[i] != NULL; i++)
		arr[i] ^= key;
	printf(" 은 ");
	display(arr);
	printf(" 로 복호화\n");

	return 0;
}

void display(char *arr) 
{
	int i;
	for (i = 0; arr[i] != NULL; i++)
		printf("%c", arr[i]);
}
