1번

#include <stdio.h>

struct point {
	int x;
	int y;
};

int equal(struct point p1, struct point p2);
int quadrant(struct point p);

int main(void)
{
	struct point p1;
	struct point p2;
	struct point p;

	printf("첫 번째 점의 좌표를 입력하시오: ");
	scanf("%d %d", &p1.x, &p1.y);
	printf("두 번째 점의 좌표를 입력하시오: ");
	scanf("%d %d", &p2.x, &p2.y);

	printf("일치 여부 = %d\n", equal(p1, p2));

	printf("좌표를 입력하시오: ");
	scanf("%d %d", &p.x, &p.y);

	printf("사분면 %d\n", quadrant(p));
	
	return 0;
}

int equal(struct point p1, struct point p2)
{
	if (p1.x == p2.x && p1.y == p2.y)
		return 1;
	else
		return 0;
}

int quadrant(struct point p)
{
	if (p.x > 0 && p.y > 0)
		return 1;
	if (p.x < 0 && p.y > 0)
		return 2;
	if (p.x < 0 && p.y < 0)
		return 3;
	if (p.x > 0 && p.y < 0)
		return 4;
}

2번
#include <stdio.h>

struct point {
	int x;
	int y;
};

int equal(struct point *p1, struct point *p2);
int quadrant(struct point *p);

int main(void)
{
	struct point p1;
	struct point p2;
	struct point p;

	printf("첫 번째 점의 좌표를 입력하시오: ");
	scanf("%d %d", &p1.x, &p1.y);
	printf("두 번째 점의 좌표를 입력하시오: ");
	scanf("%d %d", &p2.x, &p2.y);

	printf("일치 여부 = %d\n", equal(&p1, &p2));

	printf("좌표를 입력하시오: ");
	scanf("%d %d", &p.x, &p.y);

	printf("사분면 %d\n", quadrant(&p));
	
	return 0;
}

int equal(struct point *p1, struct point *p2)
{
	if (p1->x == p2->x && p1->y == p2->y)
		return 1;
	else
		return 0;
}

int quadrant(struct point *p)
{
	if (p->x > 0 && p->y > 0)
		return 1;
	if (p->x < 0 && p->y > 0)
		return 2;
	if (p->x < 0 && p->y < 0)
		return 3;
	if (p->x > 0 && p->y < 0)
		return 4;
}

3번
#include <stdio.h>
#include <math.h>

struct point {
	int x, y;
};

struct rectangle {
	struct point a, b;
};

int area(struct rectangle r);
int perimeter(struct rectangle r);
int is_square(struct rectangle r);

int main(void)
{
	struct rectangle r;
	
	printf("첫 번째 점을 입력하시오: ");
	scanf("%d %d", &r.a.x, &r.a.y);

	printf("두 번째 점을 입력하시오: ");
	scanf("%d %d", &r.b.x, &r.b.y);
	
	printf("사각형의 넓이: %d\n", area(r));
	printf("사각형의 둘레: %d\n", perimeter(r));

	if (is_square(r) == 1)
		printf("정사각형입니다.\n");
	else
		printf("정사각형이 아닙니다.\n");

	return 0;
}

int area(struct rectangle r)
{
	return abs((r.a.x - r.b.x) * (r.a.y - r.b.y));
}

int perimeter(struct rectangle r)
{
	return 2 * (abs(r.a.x - r.b.x) + abs(r.a.y - r.b.y));
}

int is_square(struct rectangle r)
{
	if (abs(r.a.x - r.b.x) == abs(r.a.y - r.b.y))
		return 1;
	else
		return 0;
}


4번
#include <stdio.h>

struct complex {
	double real;
	double imag;
};

void complex_add(struct complex x1,struct complex x2);

int main(void)
{
	struct complex x1;
	struct complex x2;

	printf("첫 번째 복소수의 실수부: ");
	scanf("%lf", &x1.real);
	printf("첫 번째 복소수의 허수부: ");
	scanf("%lf", &x1.imag);
	printf("두 번째 복소수의 실수부: ");
	scanf("%lf", &x2.real);
	printf("두 번째 복소수의 허수부: ");
	scanf("%lf", &x2.imag);
	printf("\n");

	complex_add(x1, x2);

	return 0;
}

void complex_add(struct complex x1, struct complex x2)
{
	printf("복소수의 합 \n");
	printf("실수부 : %f \n", x1.real + x2.real);
	printf("허수부 : %f \n", x1.imag + x2.imag);
}

5번
#include <stdio.h>

struct vector {
	double x;
	double y;
};

void vector_add(struct vector p1, struct vector p2);

int main(void)
{
	struct vector p1;
	struct vector p2;
	
	printf("첫 번째 벡터를 쓰시오: ");
	scanf("%lf %lf", &p1.x, &p1.y);

	printf("두 번째 벡터를 쓰시오: ");
	scanf("%lf %lf", &p2.x, &p2.y);

	vector_add(p1, p2);

	return 0;
}

void vector_add(struct vector p1, struct vector p2)
{
	printf("x벡터의 합: %f\n", p1.x + p2.x);
	printf("y벡터의 합: %f\n", p1.y + p2.y);
}

6번
#include <stdio.h>

struct Mail {
	char title[50];
	char takename[20];
	char sendname[20];
	char message[100];
	char date[20];
	int priority;
};

int main(void)
{
	struct Mail arr;

	printf("제    목: ");
	gets(arr.title);
	printf("수 신 자: ");
	gets(arr.takename);	
	printf("발 신 자: ");
	gets(arr.sendname);
	printf("내    용: ");
	gets(arr.message);
	printf("날    짜: ");
	gets(arr.date);
	printf("우선순위: ");
	scanf("%d", &arr.priority);

	return 0;
}

7번
#include <stdio.h>

struct food {
	char name[100];
	int calories;
};

void total_cal(struct food *array, int size);

int main(void)
{
	struct food array[3];
	int i;

	for (i = 0; i < 3; i++)
	{
		printf("이름: ");
		scanf("%s", &array[i].name);

		printf("칼로리: ");
		scanf("%d", &array[i].calories);
	}
	

	total_cal(array, 3);

	return 0;
	
}

void total_cal(struct food *array, int size)
{
	int i;
	int sum = 0;
	for (i = 0; i < size; i++)
	{
		sum += array[i].calories;
	}
	printf("칼로리합 %d\n", sum);
}


8번
#include <stdio.h>
#define SIZE 10

typedef struct{
	int number;
	char name[20];
	char mobile[20];
	int age;
}Employee;

void find_employee(Employee *employee, int size);

int main(void)
{
	Employee employee[SIZE];
	int i;

	for (i = 0; i < SIZE; i++)
	{
		printf("사번: ");
		scanf("%d", &employee[i].number);

		printf("이름: ");
		scanf("%s", &employee[i].name);

		printf("전화번호: ");
		scanf("%s", &employee[i].mobile);
	
		printf("나이: ");
		scanf("%d", &employee[i].age);
		printf("\n");
	}

	find_employee(employee, SIZE);

	return 0;	
}

void find_employee(Employee *employee, int size)
{
	int i;
	int count = 0;

	for (i = 0; i < size; i++)
	{
		if (employee[i].age >= 20 && employee[i].age <= 30)
			count++;
	}

	printf("나이가 20이상 30이하인 직원의 수: %d\n", count);
}


9번
#include <stdio.h>
#define SIZE 5

struct teltel {
	char name[20];
	char home_num[20];
	char sel_num[20];
};

void recieve_data(struct teltel *data, int size);
void check_num(struct teltel *data, int size);

int main(void)
{
	struct teltel data[SIZE];
	
	recieve_data(data, SIZE);
	
	check_num(data, SIZE);
	return 0;
}

void recieve_data(struct teltel *data, int size)
{
	int i;
	for (i = 0; i < size; i++)
	{
		printf("이름: ");
		scanf("%s", &data[i].name);

		printf("집번호: ");
		scanf("%s", &data[i].home_num);

		printf("개인 번호: ");
		scanf("%s", &data[i].sel_num);
	}
}

void check_num(struct teltel *data, int size)
{
	char name[20];
	int i;

	printf("찾을 이름을 입력하시오: ");
	scanf("%s", &name);
	for (i = 0; i < size; i++)
	{
		if (strcmp(name, data[i].name) == 0)
		{
			printf("집번호: %s\n", data[i].home_num);
			printf("개인 번호: %s\n", data[i].sel_num);
		}
	}
}


10번

#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#define SIZE 52

struct card {
	int value;
	char suit;
};

void initial_card(struct card *cardData, char *shape);
void print_card(struct card *cardData, int size);
void shuffle_card(struct card *cardData, int size);

int main() {
	struct card cardData[SIZE];
	char shape[4] = { 'c', 'd', 'h', 's' };
	srand((unsigned)time(NULL));

	initial_card(cardData, shape);

	printf("== 초기화 된 카드 == \n");
	print_card(cardData, SIZE);
	printf("\n");

	shuffle_card(cardData, SIZE);

	printf("== 셔플을 한 카드 == \n");
	print_card(cardData, SIZE);
	printf("\n");
	return 0;
}

void initial_card(struct card *cardData, char *shape) 
{
	int i, j, count = 0;

	for (i = 0; i<4; i++)
	{
		for (j = 0; j<13; j++) 
		{
			cardData[count].value = j + 1;
			cardData[count].suit = shape[i];
			count++;
		}
	}
}
void print_card(struct card *cardData, int size) 
{
	int i;
	for (i = 0; i < size; i++) 
	{
		printf("%d%c ", cardData[i].value, cardData[i].suit);
	}
}
void shuffle_card(struct card *cardData, int size)
{
	struct card temp;
	int i, j;

	for (i = 0; i < 52; i++)
	{
		j = rand() % 52;
		temp.value = cardData[i].value;
		cardData[i].value = cardData[j].value;
		cardData[j].value = temp.value;
	}
}

11번
#include <stdio.h>

struct shape{
	int type;
	union {
		struct { double base, height; } tri;
		struct { double width, height; } rect;
		struct { double radius; } circ;
	} data;
};

int main(void)
{
	struct shape shapeData;

	while (1)
	{
		printf("도형의 타입을 입력하시오(0,1,2)");
		scanf("%d", &shapeData.type);
		if (shapeData.type == -1)
			break;

		switch (shapeData.type)
		{
		case 0:
			printf("삼각형의 밑변 : ");    
			scanf("%lf", &shapeData.data.tri.base);
			printf("삼각형의 높이 : ");    
			scanf("%lf", &shapeData.data.tri.height);
			break;

		case 1:
			printf("사각형의 가로 : ");   
			scanf("%lf", &shapeData.data.rect.width);
			printf("사각형의 세로 : ");    
			scanf("%lf", &shapeData.data.rect.height);
			break;

		case 2:
			printf("원의 반지름 : ");    
			scanf("%lf", &shapeData.data.circ.radius);
			break;

		default:
			printf("잘못 입력하였습니다. \n");
			break;
		}
	}

	return 0;
}
